import discord
from discord.ext import commands
import json
import os
import logging
import traceback

# Log file setup
LOG_FILE = "bot_errors.log"
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.ERROR,
    format="%(asctime)s - %(levelname)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S"
)

def log_error(error):
    logging.error(f"Exception occurred: {error}")
    logging.error(traceback.format_exc())

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

DATA_FILE = "voice_channels.json"
CHANNEL_ID_FILE = "channel_id.txt"

def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r") as file:
            return json.load(file)
    return {}

def save_data(data):
    with open(DATA_FILE, "w") as file:
        json.dump(data, file, indent=4)

def load_channel_id():
    if os.path.exists(CHANNEL_ID_FILE):
        with open(CHANNEL_ID_FILE, "r") as file:
            return file.read().strip()
    return None

def save_channel_id(channel_id):
    with open(CHANNEL_ID_FILE, "w") as file:
        file.write(channel_id)

voice_channels = load_data()
existing_channel_id = load_channel_id()

class VoiceRoomView(discord.ui.View):
    def __init__(self, is_leader):
        super().__init__(timeout=None)
        self.is_leader = is_leader
        self.setup_buttons()

    def setup_buttons(self):
        if self.is_leader:
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="rename", emoji="<:emoji:1283321369555238912>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="set_limit", emoji="<:emoji:1283321181625122847>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="close_open_room", emoji="<:emoji:1283321100687642659>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="reset", emoji="üîÅ"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="kick_and_deny", emoji="<:emoji:1283321053392666685>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="grant_role_access", emoji="<:emoji:1283321307102052353>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="change_leader", emoji="<:emoji:1283321260436099123>"))
            self.add_item(discord.ui.Button(label="", style=discord.ButtonStyle.secondary, custom_id="move_up", emoji="<:emoji:1283320991207915520>"))
        else:
            for button in self.children:
                button.disabled = True

class RenameRoomModal(discord.ui.Modal):
    def __init__(self, channel_id):
        super().__init__(title="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã")
        self.channel_id = channel_id
        self.new_name = discord.ui.TextInput(label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã", required=True)
        self.add_item(self.new_name)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            channel = interaction.guild.get_channel(self.channel_id)
            if channel:
                await channel.edit(name=self.new_name.value)
                await interaction.response.send_message(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {self.new_name.value}.", ephemeral=True)
        except Exception as error:
            log_error(error)
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

class SetLimitModal(discord.ui.Modal):
    def __init__(self, channel_id):
        super().__init__(title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        self.channel_id = channel_id
        self.limit_input = discord.ui.TextInput(label="–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99", required=True)
        self.add_item(self.limit_input)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            channel = interaction.guild.get_channel(self.channel_id)
            limit = int(self.limit_input.value)
            if channel and 1 <= limit <= 99:
                await channel.edit(user_limit=limit)
                await interaction.response.send_message(f"–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {limit}.", ephemeral=True)
            else:
                await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ (–æ—Ç 1 –¥–æ 99).", ephemeral=True)
        except Exception as error:
            log_error(error)
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ª–∏–º–∏—Ç–∞.", ephemeral=True)

class UserSelectMenu(discord.ui.Select):
    def __init__(self, options, channel_id):
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–≥–Ω–∞–Ω–∏—è", options=options)
        self.channel_id = channel_id

    async def callback(self, interaction: discord.Interaction):
        try:
            selected_user_id = int(self.values[0])
            voice_channel = interaction.guild.get_channel(self.channel_id)
            if voice_channel:
                user = interaction.guild.get_member(selected_user_id)
                if user:
                    await user.move_to(None)
                    await voice_channel.set_permissions(user, connect=False)
                    await interaction.response.send_message(f"{user.display_name} –±—ã–ª –≤—ã–≥–Ω–∞–Ω –∏ –ª–∏—à–µ–Ω –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True)
                else:
                    await interaction.response.send_message("–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            else:
                await interaction.response.send_message("–ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        except Exception as error:
            log_error(error)
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥–Ω–∞–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞.", ephemeral=True)

class RoleSelectMenu(discord.ui.Select):
    def __init__(self, options, channel_id):
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞", options=options)
        self.channel_id = channel_id

    async def callback(self, interaction: discord.Interaction):
        try:
            selected_role_id = int(self.values[0])
            voice_channel = interaction.guild.get_channel(self.channel_id)
            role = interaction.guild.get_role(selected_role_id)
            
            if not voice_channel:
                await interaction.response.send_message("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            if not role:
                await interaction.response.send_message("–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return

            await voice_channel.set_permissions(role, connect=True)
            await interaction.response.send_message(f"–î–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω —Ä–æ–ª–∏ {role.name}.", ephemeral=True)

            current_permissions = voice_channel.overwrites_for(interaction.guild.default_role)
            new_perms = not current_permissions.connect

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –≤—Å–µ—Ö
            await voice_channel.set_permissions(interaction.guild.default_role, connect=False)

            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ª–∏–¥–µ—Ä –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            await voice_channel.set_permissions(member, connect=True)
                
            status = '–æ—Ç–∫—Ä—ã—Ç–∞' if new_perms else '–∑–∞–∫—Ä—ã—Ç–∞'
            await interaction.response.send_message(f"–ö–æ–º–Ω–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å {status} –¥–ª—è –≤—Å–µ—Ö.", ephemeral=True)

        except Exception as error:
            log_error(error)
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ —Ä–æ–ª–∏.", ephemeral=True)


class LeaderSelectMenu(discord.ui.Select):
    def __init__(self, options, channel_id):
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –ª–∏–¥–µ—Ä–∞", options=options)
        self.channel_id = channel_id

    async def callback(self, interaction: discord.Interaction):
        try:
            selected_user_id = int(self.values[0])
            if interaction.user.id == voice_channels[self.channel_id]["leader_id"]:
                voice_channels[self.channel_id]["leader_id"] = selected_user_id
                save_data(voice_channels)
                
                selected_user = interaction.guild.get_member(selected_user_id)
                if selected_user:
                    await interaction.response.send_message(f"{selected_user.display_name} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏–¥–µ—Ä–æ–º –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)
                else:
                    await interaction.response.send_message("–í—ã–±—Ä–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)
        except Exception as error:
            log_error(error)
            await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ –ª–∏–¥–µ—Ä–∞.", ephemeral=True)

@bot.event
async def on_ready():
    global voice_channels
    for channel_id in list(voice_channels.keys()):
        channel = bot.get_channel(channel_id)
        if not channel:
            del voice_channels[channel_id]
    save_data(voice_channels)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if existing_channel_id:
        existing_channel = bot.get_channel(int(existing_channel_id))
        if existing_channel:
            print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–π—Å–∞: {existing_channel.name}")
            if existing_channel.id not in voice_channels:
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª –∫–∞–∫ –Ω–æ–≤—ã–π
                voice_channels[existing_channel.id] = {
                    "owner_id": None,
                    "type": "create_room"
                }
                save_data(voice_channels)
                print(f"–ö–∞–Ω–∞–ª {existing_channel.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ.")
        else:
            print("–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            save_channel_id("")  # –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π ID

    print(f"Bot {bot.user} is ready!")

@bot.command(name="create_voice")
@commands.has_permissions(administrator=True)
async def create_voice(ctx):
    guild = ctx.guild
    existing_channel = discord.utils.get(guild.voice_channels, name=" + | –°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª")
    if existing_channel:
        await ctx.send(f"–ö–æ–º–Ω–∞—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {existing_channel.name}")
        save_channel_id(str(existing_channel.id))
        return

    voice_channel = await guild.create_voice_channel(f" + | –°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª")
    voice_channels[voice_channel.id] = {"owner_id": None, "type": "create_room"}
    save_data(voice_channels)
    save_channel_id(str(voice_channel.id))
    await ctx.send(f"–°–æ–∑–¥–∞–Ω –≤–æ–π—Å: {voice_channel.name}")

@bot.event
async def on_voice_state_update(member, before, after):
    try:
        if after.channel and after.channel.id in voice_channels:
            if voice_channels[after.channel.id]["type"] == "create_room":
                category = after.channel.category
                new_voice_channel = await after.channel.guild.create_voice_channel(f"–ö–æ–º–Ω–∞—Ç–∞ {member.display_name}", category=category, user_limit=3)
                
                overwrite = discord.PermissionOverwrite()
                overwrite.connect = True
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º after.channel.guild –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–∏–ª—å–¥–∏–∏
                await new_voice_channel.set_permissions(after.channel.guild.default_role, overwrite=overwrite)
                
                await member.move_to(new_voice_channel)

                voice_channels[new_voice_channel.id] = {
                    "owner_id": member.id,
                    "type": "private_room",
                    "leader_id": member.id
                }
                save_data(voice_channels)

        if before.channel and before.channel.id in voice_channels:

            if len(before.channel.members) == 0 and voice_channels[before.channel.id]["type"] == "private_room":
                del voice_channels[before.channel.id]
                save_data(voice_channels)
                await before.channel.delete()
            if len(before.channel.members) == 1 and voice_channels[before.channel.id]["type"] == "private_room":
                last_member = before.channel.members[0]
                voice_channels[before.channel.id]["leader_id"] = last_member.id
    except Exception as error:
        log_error(error)

async def send_room_menu(member, voice_channel):
    leader_id = voice_channels[voice_channel.id]["leader_id"]
    is_leader = leader_id == member.id
    embed = discord.Embed(title=f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–æ–π. \n<:emoji:1283321100687642659> - –ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É\n<:emoji:1283321369555238912> - –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã\n<:emoji:1283321053392666685> - –í—ã–≥–Ω–∞—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n<:emoji:1283321260436099123> - –ü–µ—Ä–µ–¥–∞—Ç—å –ª–∏–¥–µ—Ä—Å—Ç–≤–æ\n<:emoji:1283321181625122847> - –ó–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n<:emoji:1283320991207915520> - –ü–æ–¥–Ω—è—Ç—å –∫–æ–º–Ω–∞—Ç—É –≤ –≤–µ—Ä—Ö\n<:emoji:1283321307102052353> - –î–∞—Ç—å –¥–æ—Å—Ç—É–ø —Ä–æ–ª–∏\nüîÅ - –†–µ—Å–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π —ç—Ç–æ–≥–æ –≤–æ–π—Å–∞. ")
    view = VoiceRoomView(voice_channel.id, is_leader)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –≤—ã–∑–≤–∞–Ω –±–æ—Ç
    await member.send(embed=embed, view=view)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é
@bot.command(name="menu")
@commands.has_permissions(administrator=True)
async def menu(ctx):
    embed = discord.Embed(
        title=f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π",
        description="<:emoji:1283321100687642659> –ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É\n"
                    "<:emoji:1283321369555238912> –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã\n"
                    "<:emoji:1283321053392666685> –í—ã–≥–Ω–∞—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
                    "<:emoji:1283321260436099123> –ü–µ—Ä–µ–¥–∞—Ç—å –ª–∏–¥–µ—Ä—Å—Ç–≤–æ\n"
                    "<:emoji:1283321181625122847> –ó–∞–¥–∞—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                    "<:emoji:1283320991207915520> –ü–æ–¥–Ω—è—Ç—å –∫–æ–º–Ω–∞—Ç—É –≤ –≤–µ—Ä—Ö\n"
                    "<:emoji:1283321307102052353> –î–∞—Ç—å –¥–æ—Å—Ç—É–ø —Ä–æ–ª–∏\n"
                    "üîÅ –†–µ—Å–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π —ç—Ç–æ–≥–æ –≤–æ–π—Å–∞."
    )
    view = VoiceRoomView(is_leader=True)
    await ctx.send(embed=embed, view=view)

@bot.event
async def on_interaction(interaction: discord.Interaction):
    try:
        member = interaction.user
        channel_id = None
        custom_id = interaction.data.get("custom_id")
        voice_channel_id = interaction.channel.id

        # –ù–∞–π—Ç–∏ –∫–∞–Ω–∞–ª, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏–¥–µ—Ä–æ–º
        for channel, data in voice_channels.items():
            if data.get("leader_id") == member.id:
                channel_id = channel
                break

        if channel_id is None:
            await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º –Ω–∏ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–Ω–∞–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.", ephemeral=True)
            return

        voice_channel = interaction.guild.get_channel(int(channel_id))

        if voice_channel is None:
            await interaction.response.send_message("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.", ephemeral=True)
            return

        if custom_id == "rename":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                modal = RenameRoomModal(voice_channel.id)
                await interaction.response.send_modal(modal)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

        elif custom_id == "set_limit":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                modal = SetLimitModal(voice_channel.id)
                await interaction.response.send_modal(modal)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

        if custom_id == "close_open_room":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                current_permissions = voice_channel.overwrites_for(interaction.guild.default_role)
                new_perms = not current_permissions.connect

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –≤—Å–µ—Ö
                await voice_channel.set_permissions(interaction.guild.default_role, connect=new_perms)

                # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ª–∏–¥–µ—Ä –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
                await voice_channel.set_permissions(member, connect=True)
                
                status = '–æ—Ç–∫—Ä—ã—Ç–∞' if new_perms else '–∑–∞–∫—Ä—ã—Ç–∞'
                await interaction.response.send_message(f"–ö–æ–º–Ω–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å {status} –¥–ª—è –≤—Å–µ—Ö.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

        elif custom_id == "reset":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                leader_id = voice_channels[voice_channel.id].get("leader_id")
                if leader_id:
                    leader = interaction.guild.get_member(leader_id)
                    await voice_channel.edit(name=f"–ö–æ–º–Ω–∞—Ç–∞ {leader.display_name if leader else '–õ–∏–¥–µ—Ä'}")
                
                # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤ —É —Ä–æ–ª–µ–π
                for role in interaction.guild.roles:
                    if role.id != interaction.guild.default_role.id:
                        current_perms = voice_channel.overwrites_for(role)
                        if current_perms.connect:
                            await voice_channel.set_permissions(role, connect=None)
                
                # –°–±—Ä–æ—Å –ª–∏–º–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤—Å–µ—Ö
                await voice_channel.edit(user_limit=None)
                await voice_channel.set_permissions(interaction.guild.default_role, connect=True)
                
                await interaction.response.send_message("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–Ω–∞—Ç—ã –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)


        elif custom_id == "kick_and_deny":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                members = [m for m in voice_channel.members]
                if members:
                    options = [discord.SelectOption(label=m.display_name, value=str(m.id)) for m in members]
                    view = discord.ui.View()
                    select_menu = UserSelectMenu(options, voice_channel_id)
                    view.add_item(select_menu)
                    await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–≥–Ω–∞–Ω–∏—è:", view=view, ephemeral=True)
                else:
                    await interaction.response.send_message("–í –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –≤—ã–≥–Ω–∞–Ω–∏—è.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

        elif custom_id == "grant_role_access":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                # –ù–∞–π—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏–¥–µ—Ä
                leader_voice_channel = member.voice.channel
                if leader_voice_channel is None:
                    await interaction.response.send_message("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
                    return
                
                # –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ª–∏–¥–µ—Ä –º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å
                roles = [r for r in interaction.guild.roles if r.id in [role.id for role in member.roles]]
                if roles:
                    options = [discord.SelectOption(label=r.name, value=str(r.id)) for r in roles]
                    view = discord.ui.View()
                    select_menu = RoleSelectMenu(options, leader_voice_channel.id)
                    view.add_item(select_menu)
                    await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞:", view=view, ephemeral=True)
                else:
                    await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)

        elif custom_id == "change_leader":
            members = [m for m in voice_channel.members if m.id != voice_channels[voice_channel.id]["leader_id"]]
            if members:
                options = [discord.SelectOption(label=m.display_name, value=str(m.id)) for m in members]
                view = discord.ui.View()
                select_menu = LeaderSelectMenu(options, voice_channel.id)
                view.add_item(select_menu)
                await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –ª–∏–¥–µ—Ä–∞:", view=view, ephemeral=True)
            else:
                await interaction.response.send_message("–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–∞.", ephemeral=True)

        elif custom_id == "move_up":
            if member.id == voice_channels[voice_channel.id]["leader_id"]:
                await voice_channel.edit(position=2)
                await interaction.response.send_message("–ö–æ–º–Ω–∞—Ç–∞ –±—ã–ª–∞ –ø–æ–¥–Ω—è—Ç–∞ –≤ –≤–µ—Ä—Ö —Å–ø–∏—Å–∫–∞.", ephemeral=True)
            else:
                await interaction.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã.", ephemeral=True)
                
    except Exception as error:
        log_error(error)
        await interaction.response.send_message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

bot.run("tokinüòã")